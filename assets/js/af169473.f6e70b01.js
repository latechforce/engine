"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3866],{8173:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"api/automation/trigger/integration/notion/tablepagecreated","title":"Table Page Created","description":"A trigger that fires when a table page is created in Notion","source":"@site/version/latest/api/automation/trigger/integration/notion/tablepagecreated.md","sourceDirName":"api/automation/trigger/integration/notion","slug":"/api/automation/trigger/integration/notion/tablepagecreated","permalink":"/api/automation/trigger/integration/notion/tablepagecreated","draft":false,"unlisted":false,"editUrl":"https://github.com/latechforce/engine/tree/main/website/version/latest/api/automation/trigger/integration/notion/tablepagecreated.md","tags":[],"version":"current","frontMatter":{},"sidebar":"api","previous":{"title":"Notion","permalink":"/api/automation/trigger/integration/notion/"},"next":{"title":"YouCanBookMe","permalink":"/api/automation/trigger/integration/youcanbookme/"}}');var a=n(4848),r=n(8453);const o={},c="Table Page Created",s={},l=[{value:"Required",id:"required",level:2},{value:"Integration",id:"integration",level:3},{value:"Event",id:"event",level:3},{value:"Database",id:"database",level:3},{value:"Account",id:"account",level:3}];function d(e){const t={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"table-page-created",children:"Table Page Created"})}),"\n",(0,a.jsx)(t.p,{children:"A trigger that fires when a table page is created in Notion"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:'import App, { type Config } from \'@latechforce/engine/bun\'\n\nconst config: Config = {\n  "name": "App with an automation with a notion table page created trigger",\n  "automations": [\n    {\n      "name": "NotionTablePageCreated",\n      "trigger": {\n        "integration": "Notion",\n        "event": "TablePageCreated",\n        "table": "{{ env.NOTION_TABLE_ID }}",\n        "account": "notion"\n      },\n      "actions": []\n    }\n  ]\n}\n\nawait new App().start(config)\n'})}),"\n",(0,a.jsx)(t.h2,{id:"required",children:"Required"}),"\n",(0,a.jsx)(t.h3,{id:"integration",children:"Integration"}),"\n",(0,a.jsx)(t.p,{children:"The integration type for this trigger"}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["integration: const: ",(0,a.jsx)(t.code,{children:"Notion"})]}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"event",children:"Event"}),"\n",(0,a.jsx)(t.p,{children:"The event type for this trigger"}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["event: const: ",(0,a.jsx)(t.code,{children:"TablePageCreated"})]}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"database",children:"Database"}),"\n",(0,a.jsx)(t.p,{children:"The database identifier for this trigger"}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["table: ",(0,a.jsx)(t.code,{children:"string"})]}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"account",children:"Account"}),"\n",(0,a.jsx)(t.p,{children:"The account identifier for this trigger"}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["account: ",(0,a.jsx)(t.code,{children:"string"})]}),"\n"]})]})}function g(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var i=n(6540);const a={},r=i.createContext(a);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);