"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8299],{2355:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"contributing/test","title":"Test & development","description":"We aim to follow a Test-Driven Development (TDD) approach to develop the project.","source":"@site/docs/contributing/test.md","sourceDirName":"contributing","slug":"/contributing/test","permalink":"/docs/contributing/test","draft":false,"unlisted":false,"editUrl":"https://github.com/latechforce/engine/tree/main/website/docs/docs/contributing/test.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"docs","previous":{"title":"Commands","permalink":"/docs/contributing/commands"},"next":{"title":"Architecture","permalink":"/docs/contributing/architecture"}}');var i=n(4848),o=n(8453);const r={sidebar_position:5},l="Test & development",a={},d=[{value:"Philosophy",id:"philosophy",level:2},{value:"How to develop a new feature?",id:"how-to-develop-a-new-feature",level:2},{value:"Where to write tests?",id:"where-to-write-tests",level:2},{value:"Examples",id:"examples",level:3},{value:"End-to-end tests",id:"end-to-end-tests",level:3},{value:"Unit tests",id:"unit-tests",level:3}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"test--development",children:"Test & development"})}),"\n",(0,i.jsxs)(t.p,{children:["We aim to follow a ",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Test-driven_development",children:"Test-Driven Development (TDD)"})," approach to develop the project."]}),"\n",(0,i.jsx)(t.h2,{id:"philosophy",children:"Philosophy"}),"\n",(0,i.jsx)(t.p,{children:"We use our end-to-end tests to document the features of the project."}),"\n",(0,i.jsx)(t.p,{children:"Each test is based on a example configuration."}),"\n",(0,i.jsx)(t.p,{children:"Example configurations and end-to-end tests are following the same folder structure."}),"\n",(0,i.jsx)(t.p,{children:"There are used in the documentation as guides, so they should be as complete as possible."}),"\n",(0,i.jsx)(t.h2,{id:"how-to-develop-a-new-feature",children:"How to develop a new feature?"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Create a new example that demonstrates the feature."}),"\n",(0,i.jsx)(t.li,{children:"Create the end-to-end for the feature."}),"\n",(0,i.jsx)(t.li,{children:"Implement the feature, using unit tests if needed."}),"\n",(0,i.jsx)(t.li,{children:"Run the tests to ensure the feature works."}),"\n",(0,i.jsx)(t.li,{children:"Write the documentation for the feature."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"where-to-write-tests",children:"Where to write tests?"}),"\n",(0,i.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsxs)(t.p,{children:["We use examples to demonstrate the features of the project.\nThey are used to write our end-to-end, unit tests and documentation guides.\nAll examples are located in the ",(0,i.jsx)(t.code,{children:"example"})," directory."]}),"\n",(0,i.jsx)(t.p,{children:"You can run all examples with the following command:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"bun run example\n"})}),"\n",(0,i.jsx)(t.p,{children:"You can also run a specific example with the following command:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"bun run example <filter>\n"})}),"\n",(0,i.jsx)(t.p,{children:"The filter is a regular expression that matches the example name."}),"\n",(0,i.jsx)(t.h3,{id:"end-to-end-tests",children:"End-to-end tests"}),"\n",(0,i.jsxs)(t.p,{children:["We use ",(0,i.jsx)(t.a,{href:"https://playwright.dev/",children:"Playwright"})," to write end-to-end tests.\nAll end-to-end tests are located in the ",(0,i.jsx)(t.code,{children:"e2e"})," directory.\nEach test location should be following the ",(0,i.jsx)(t.code,{children:"example"})," folder structure."]}),"\n",(0,i.jsx)(t.p,{children:"You can run all end-to-end tests with the following command:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"bun run e2e\n"})}),"\n",(0,i.jsx)(t.p,{children:"You can also run a specific end-to-end test with the following command:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"bun run e2e <filter>\n"})}),"\n",(0,i.jsx)(t.p,{children:"The filter is a regular expression that matches the test name."}),"\n",(0,i.jsx)(t.h3,{id:"unit-tests",children:"Unit tests"}),"\n",(0,i.jsxs)(t.p,{children:["We use ",(0,i.jsx)(t.a,{href:"https://bun.sh/docs/testing",children:"Bun Test"})," to write unit tests.\nAll unit tests are located in the ",(0,i.jsx)(t.code,{children:"test"})," directory."]}),"\n",(0,i.jsx)(t.p,{children:"You can run all unit tests with the following command:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"bun run test\n"})}),"\n",(0,i.jsx)(t.p,{children:"You can also run a specific unit test with the following command:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"bun run test <filter>\n"})}),"\n",(0,i.jsx)(t.p,{children:"The filter is a regular expression that matches the test name."})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var s=n(6540);const i={},o=s.createContext(i);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);