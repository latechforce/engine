"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[538],{7995:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>u});const l=JSON.parse('{"id":"api/table/field/formula/index","title":"Formula","description":"Represents a field that calculates a value based on a formula.","source":"@site/version/latest/api/table/field/formula/index.md","sourceDirName":"api/table/field/formula","slug":"/api/table/field/formula/","permalink":"/api/table/field/formula/","draft":false,"unlisted":false,"editUrl":"https://github.com/latechforce/engine/tree/main/website/version/latest/api/table/field/formula/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"api","previous":{"title":"Email","permalink":"/api/table/field/email"},"next":{"title":"Output","permalink":"/api/table/field/formula/output"}}');var i=t(4848),a=t(8453);const r={},o="Formula",s={},u=[{value:"Required",id:"required",level:2},{value:"Name",id:"name",level:3},{value:"Type",id:"type",level:3},{value:"Formula",id:"formula-1",level:3},{value:"Output",id:"output",level:3},{value:"Optional",id:"optional",level:2},{value:"Required",id:"required-1",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"formula",children:"Formula"})}),"\n",(0,i.jsx)(n.p,{children:"Represents a field that calculates a value based on a formula."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'import App, { type Config } from \'@latechforce/engine/bun\'\n\nconst config: Config = {\n  "name": "App with a table with a formula field",\n  "tables": [\n    {\n      "name": "table",\n      "fields": [\n        {\n          "name": "single_line_text",\n          "type": "SingleLineText"\n        },\n        {\n          "name": "formula",\n          "type": "Formula",\n          "formula": "single_line_text || \\"!\\"",\n          "output": {\n            "type": "SingleLineText"\n          }\n        }\n      ]\n    }\n  ]\n}\n\nawait new App().start(config)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"required",children:"Required"}),"\n",(0,i.jsx)(n.h3,{id:"name",children:"Name"}),"\n",(0,i.jsx)(n.p,{children:"The name of the field."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["name: ",(0,i.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"type",children:"Type"}),"\n",(0,i.jsx)(n.p,{children:"The type of the field."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["type: const: ",(0,i.jsx)(n.code,{children:"Formula"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"formula-1",children:"Formula"}),"\n",(0,i.jsx)(n.p,{children:"The formula expression to calculate the field value."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["formula: ",(0,i.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"output",children:"Output"}),"\n",(0,i.jsx)(n.p,{children:"The output type configuration for the formula field."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["output: ",(0,i.jsx)(n.a,{href:"/api/table/field/formula/output",children:"Output"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"optional",children:"Optional"}),"\n",(0,i.jsx)(n.h3,{id:"required-1",children:"Required"}),"\n",(0,i.jsxs)(n.p,{children:["Whether the field is required.\nThe default value is ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["required?: ",(0,i.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'import App, { type Config } from \'@latechforce/engine/bun\'\n\nconst config: Config = {\n  "name": "App with a table with a required formula field",\n  "tables": [\n    {\n      "name": "table",\n      "fields": [\n        {\n          "name": "single_line_text",\n          "type": "SingleLineText",\n          "required": true\n        },\n        {\n          "name": "formula",\n          "type": "Formula",\n          "formula": "single_line_text || \\"!\\"",\n          "output": {\n            "type": "SingleLineText"\n          },\n          "required": true\n        }\n      ]\n    }\n  ]\n}\n\nawait new App().start(config)\n'})})]})}function c(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var l=t(6540);const i={},a=l.createContext(i);function r(e){const n=l.useContext(a);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),l.createElement(a.Provider,{value:n},e.children)}}}]);